name: Uni-Dock CI/CD
on:
  push:
    branches: [ ci ]
  pull_request:
    branches: [ master ]

jobs:
  unidock_test:
    runs-on: nvidia
    container: nvidia/cuda:12.2.0-devel-ubuntu22.04
    steps:
    - name: checkout repo
      uses: actions/checkout@v3

    - name: install basic packages
      run: |
        apt-get update
        apt-get install -y build-essential cmake libboost-all-dev
        rm -rf /var/lib/apt/lists/*

    - name: build
      run: |
        cd unidock
        mkdir build
        cd build
        cmake ..
        make -j4
        cd ../..

    - name: validation
      run: |
        echo $(pwd)
        unidock --version
      env:
        PATH: $(pwd)/unidock/build:$PATH

    - name: perform unit-test
      run: |
        pip install pytest coverage
        pytest unidock/test/ut -v --junitxml=report.xml
        coverage report.xml
      env:
        PATH: $(pwd)/unidock/build:$PATH
  
  build_docker_image:
    needs: unidock_test
    runs-on: ubuntu-latest
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: read version
      id: read
      uses: juliangruber/read-file-action@v1
      with:
        path: ./VERSION

    - name: build docker image
      run: |
        cd unidock
        docker buildx build . --push --platform linux/arm64,linux/amd64 -t xmyyn/unidock:v${{ steps.read.outputs.content }}
        docker buildx build . --push --platform linux/arm64,linux/amd64 -t xmyyn/unidock:latest